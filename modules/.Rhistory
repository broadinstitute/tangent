suspect_normals_filename = '../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/read_delim'
read_delim
suspect_normals_filename = '../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.early_gistic_prep_output._suspect_normals.txt'
disruption_scores_filename='../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.early_gistic_prep_output._disruption_scores.txt'
sif_filename='../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.sif.txt'
sn_file <- read_delim(suspect_normals_filename, '\t', col_types = "c")
sn_file <- read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
suspect_normals_filename
ls()
ds_file <- read_delim(disruption_scores_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
ds_file <- read.delim(disruption_scores_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
less ds_file
View(ds_file)
sif_file <- read.delim(sif_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
sif_filename='../data/genRefPlane_test_run_2018/tangent_input//run1.sif.txt'
sif_file <- read.delim(sif_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
sif_filename='../sandbox/data/genRefPlane_test_run_2018/tangent_input//run1.sif.txt'
sif_file <- read.delim(sif_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
sif_filename='../sandbox/data/genRefPlane_test_run_2018/run1.sif.txt'
sif_file <- read.delim(sif_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
View(sif_file)
sif_file.normals <- subset(sif_file, TUMOR_NORMAL == 'Normal')
cat('Threshold for disruption_scores:', ds_file$X2, '\n')
cat("There are", dim(sn_file)[1], "suspect normals out of a total of",
dim(sif_file.normals)[1], "normals.\n")
ds_file
ds_file$X2
colnames( ds_file)
colnames( ds_file)[2]
sub('^X', '', colnames( ds_file)[2])
suspect_normals_filename
suspect_normals_filename = "../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.early_gistic_prep_output._suspect_normals.txt"
sn_file <- read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
sn_file <- try(read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F))
is.empty
?read.delim
check_suspect_normals_length(suspect_normals_filename,disruption_scores_filename, sif_filename)
a= check_suspect_normals_length(suspect_normals_filename,disruption_scores_filename, sif_filename)
suspect_normals_filename
disruption_scores_filename
sif_filename
file.info(sn_file)$size
file.info(sn_file)
file.info(suspect_normals_filename)
file.info(suspect_normals_filename)$size
sn_file <- read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F)
if(file.info(suspect_normals_filename)$size == 0){
dim(sn_file)[1] = 0
}
sn_file <- try(read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F))
sn_file <- tryCatch(read.delim(suspect_normals_filename, '\t', header = T, sep='\t', stringsAsFactors = F))
dat.file = '../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.doc_interval.posttangent_woCNV.txt'
out.file = dat.file
dat <- read.delim(dat.file, as.is=TRUE)
View(dat)
write.table(dat, file=out.file, quote=FALSE, sep="\t", row.names=FALSE)
dat_stripped <- dat[,c('Chromosome', 'PhysicalPosition')]
View(dat_stripped)
View(dat)
wantedCols <- colnames(dat)[1, 4:]
wantedCols <- colnames(dat)[1, 4:end]
wantedCols <- colnames(dat)[1, 4:length(colnames(dat))]
length(colnames(dat)
)
4:8
4:length(colnames(dat))
[1, 4:length(colnames(dat))]
wantedCols <- colnames(dat)[c(1, 4:length(colnames(dat)))]
wantedcols
wantedCols
View(dat)
dat_stripped <- dat[,wantedCols]
#dat <- read_delim(dat.file, '\t', col_types = cols(.default = 'd', Marker = 'c', Chromosome = 'c', PhysicalPosition = 'i')) %>%
#dplyr::select(-Chromosome, -PhysicalPosition)
write.table(dat_stripped, file=out.file, quote=FALSE, sep="\t", row.names=FALSE)
dat.file
dat <- read.delim(dat.file, as.is=TRUE, check.names = F)
View(dat)
wantedCols <- colnames(dat)[c(1, 4:length(colnames(dat)))]
dat_stripped <- dat[,wantedCols]
in.file = dat.file
grepl('.rda$', in.file, ignore.case=T)
dat_input <- read.delim(in.file, '\t', header = T, stringsAsFactors = F)
View(dat_input)
a='1:23121-23131'
?sub
grep("^\\d+|\\w+", a, value=T)
grepl("^\\d+|\\w+", a, value=T)
regexpr("^\\d+|\\w+", a, value=T)
regexpr("^\\d+|\\w+", a)
gregexpr("^\\d+|\\w+", a)
View(dat_input)
strsplit(a, ':"')
strsplit(a, ':')
gsub(':\\d+-\\d+$', '', a)
gsub('^\\d+|\\w+:', '', a)
colnames(dat)
gsub(colnames(dat), '\\.', '-')
View(dat)
dat$Chrom <- gsub(':\\d+-\\d+$', '', dat$Marker)
dat$Location <- gsub('^\\d+|\\w+:', '', dat$Marker)
View(dat)
colnames(dat) <- gsub(colnames(dat), '\\.', '-')
colnames(dat) <- gsub('\\.', '-', colnames(dat))
colnames(dat)
dat <- dat_input
dat$Chrom <- gsub(':\\d+-\\d+$', '', dat$Marker)
dat$Location <- gsub('^\\d+|\\w+:', '', dat$Marker)
colnames(dat)
gsub('\\.', '-', colnames(dat))
colnames(dat) <- gsub('\\.', '-', colnames(dat))
colnames(dat)
sample.name
View(sif_file)
dat.file
sample.name = 'LGG-PT1-NB'
dats <- as.numeric(dat[, sample.name])
dat
head(Dat)
head(dat)
sample.name = 'LGG-PT5-NB'
dats <- as.numeric(dat[, sample.name])
chrom <- dat[, "Chrom"]
View(dat)
pos <- as.numeric(dat[, "Location"])
marker <- dat[, "Marker"]
View(dat)
dat$Location <- gsub('^\\d+|\\w+:|-\\d+$', '', dat$Marker)
dats <- as.numeric(dat[, sample.name])
chrom <- dat[, "Chrom"]
pos <- as.numeric(dat[, "Location"])
marker <- dat[, "Marker"]
dats <- if (is.vector(dats)) {
apply(as.matrix(dats), c(1, 2), log2)
} else {
apply(dats, c(1, 2), log2)
}
dats <- apply(dats, c(1, 2), function(x){
x - 1
})
source('http://bioconductor.org/biocLite.R')
BiocInstaller::biocLite('DNAcopy')
input_filename = '../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.doc_interval.posttangent_woCNV.txt'
output_dir='../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/CBS/'
sif_filename='../sandbox/result/genRefPlane_test_run_2018/tangent_output/run1/run1.sif.txt'
sif_file <- read.delim(sif_filename, '\t', stringsAsFactors = F, header = T)
sif_filename='../sandbox/data/tangent_test_run_2018/run1.sif.txt'
sif_file <- read.delim(sif_filename, '\t', stringsAsFactors = F, header = T)
list_of_samples <- sif_file$Array
list_of_samples
mySample='"LGG-PT1-NB"'
mySample='LGG-PT1-NB'
mySampleDash <- gsub('\\.', '-', mySample)
outfile <- paste0(output_dir, mySampleDash, '_woCNV_hg19.cbs')
cbs_path = 'run_cbs.R'
w
wCNV_tag = 'woCNV'
mySampleDash <- gsub('\\.', '-', mySample)
if(wCNV_tag == 'wCNV'){
outfile <- paste0(output_dir, mySampleDash, '_wCNV_hg19.cbs')
} else if (wCNV_tag == 'woCNV'){
outfile <- paste0(output_dir, mySampleDash, '_woCNV_hg19.cbs')
} else {
outfile <- paste0(output_dir, mySampleDash, '.cbs')
}
#if(!file.exists(outfile)){
system(paste('Rscript', cbs_path, '--args', input_filename, outfile, mySample))
file.exists('../sandbox')
ref
ref = read.delim('../lib/nn_LGG_LUSC_PRAD_STAD_252exome_woCNV_hg19.catted.seg.txt', '\t', stringsAsFactors = F)
ref = read.delim('../lib/nn_LGG_LUSC_PRAD_STAD_252exome_woCNV_hg19.catted.seg.txt', '\t', stringsAsFactors = F, header=T)
head(ref)
ref.sub = subset(ref, grepl('7477|A5RA|A5F6|A5R9|A5RB', Sample))
dim(ref.sub)
tail(ref.sub)
write.delim(ref.sub, 'ref/nn_LGG_subsetted10samples.catted.seg.txt', '\t')
?write.csv
write.csv(ref.sub, 'ref/nn_LGG_subsetted10samples.catted.seg.txt', quote=F, sep='\t', row.names=F)
write.csv(ref.sub, '../ref/nn_LGG_subsetted10samples.catted.seg.txt', quote=F, sep='\t', row.names=F)
write.csv(ref.sub, file='../ref/nn_LGG_subsetted10samples.catted.seg.txt', quote=F, sep='\t', row.names=F)
write.csv(ref.sub, file='../lib/nn_LGG_subsetted10samples.catted.seg.txt', quote=F, sep='\t', row.names=F)
?write.csv2
write.table(ref.sub, file='../lib/nn_LGG_subsetted10samples.catted.seg.txt', quote=F, sep='\t', row.names=F)
sifPath = '../sandbox/result/pseudoTangent_run2_n3a0.01e150/sif_files/tumors_2.sif.txt'
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
dat.tumor = subset(dat, TUMOR_NORMAL == 'Tumor')
sifPath = '../sandbox/result/pseudoTangent_run2_n3a0.01e150/run2_n3a0.01e150_InitialTangent.sif.txt'
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
sifPath
sifPath = '../sandbox/data/genRefPlane_test_run_2018/run2.sif.txt'
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
dat.tumor = subset(dat, TUMOR_NORMAL == 'Tumor')
nTumors = dim(dat.tumor, 2)
nTumors = dim(dat.tumor)[2]
nTumors
nTumors = dim(dat.tumor, 2)
nDiv = nTumors/nSplit
if nDiv > 1 and nDiv < 2:
newNSplit = nSplit - 1
nSplit=3
?if
nDiv = nTumors/nSplit
if nDiv > 1 and nDiv < 2:
newNSplit = nSplit - 1
nDiv = nTumors/nSplit
if (nDiv > 1 and nDiv < 2){
newNSplit = nSplit - 1
}
5/3
nDiv = nTumors/nSplit
nTumors
dim(dat.tumor
)
nTumors = dim(dat.tumor)[1]
nDiv = nTumors/nSplit
if(nDiv > 1 and nDiv < 2){
newNSplit = nSplit - 1
}
nDiv>1
nDiv<2
nDiv>1 && nDiv<2
nDiv = nTumors/nSplit
if(nDiv > 1 && nDiv < 2){
newNSplit = nSplit - 1
}
checkNSplit(sif_file)
checkNSplit
checkNSplit <- function(sifPath, nSplit=3) {
# sifPath = path to sif file
# nSplit = number of groups to split into
# nTumors = integer, total number of tumors in the sif file
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
dat.tumor = subset(dat, TUMOR_NORMAL == 'Tumor')
nTumors = dim(dat.tumor)[1]
nDiv = nTumors/nSplit
if(nDiv > 1 && nDiv < 2){
newNSplit = nSplit - 1
}
return(newNSplit)
}
checkNSplit(sif_file, 3)
checkNSplit(sifPath, 3)
class(nTumors)
nTumors/nSplit
class(nSplit)
num(nTumors)
as.numeric(nTumors)
as.numeric(nTumors)as.numeric(nTumors)/nSplit
as.numeric(nTumors)/nSplit
checkNSplit <- function(sifPath, nSplit=3) {
# sifPath = path to sif file
# nSplit = number of groups to split into
# nTumors = integer, total number of tumors in the sif file
dat <- read.delim(sifPath, as.is=TRUE, check.names = F)
dat.tumor = subset(dat, TUMOR_NORMAL == 'Tumor')
nTumors = dim(dat.tumor)[1]
nDiv = as.numeric(nTumors)/nSplit
while( nDiv > 1 && nDiv < 2){
nSplit = nSplit - 1
nDiv = as.numeric(nTumors)/nSplit
}
return(nSplit)
}
checkNSplit(sifPath, 3)
